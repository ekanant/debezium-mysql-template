version: "3.8"
services: 
    zookeeper:
        image: "debezium/zookeeper:1.6"
        container_name: "zookeeper"
        ports: 
            - "2181:2181"
            - "2888:2888"
            - "3888:3888"
        volumes: 
            - "./docker-data/zookeeper/data:/zookeeper/data"
            - "./docker-data/zookeeper/txns:/zookeeper/txns"
    kafka:
        image: "debezium/kafka:1.6"
        container_name: "kafka"
        depends_on: 
            - "zookeeper"
        ports: 
            - "9092:9092"
        environment:
            - "ZOOKEEPER_CONNECT=zookeeper:2181"
        volumes: 
            - "./docker-data/kafka/data:/kafka/data"
            - "./docker-data/kafka/logs:/kafka/logs"
    kafka_connect:
        image: "debezium/connect:1.6"
        container_name: "kafka_connect"
        depends_on: 
            - "mysql"
            - "kafka"
        ports: 
            - "8083:8083"
        environment: 
            - "BOOTSTRAP_SERVERS=kafka:9092"
            - "GROUP_ID=1"
            - "CONFIG_STORAGE_TOPIC=my_connect_configs"
            - "OFFSET_STORAGE_TOPIC=my_connect_offsets"
            - "STATUS_STORAGE_TOPIC=my_connect_statuses"
        volumes: 
            - "./docker-data/kafka_connect/out.txt:/kafka/out.txt"
            - "./docker-data/kafka_connect/data:/kafka/data"
            - "./docker-data/kafka_connect/logs:/kafka/logs"
    kafka-ui:
        image: "provectuslabs/kafka-ui:0.0.10"
        container_name: "kafka-ui"
        depends_on: 
            - "kafka"
        ports:
            - "8181:8080"
        restart: always
        environment:
            - "KAFKA_CLUSTERS_0_NAME=local"
            - "KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092"
            - "KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181"
    mysql:
        image: "mysql:8.0.25"
        container_name: "mysql"
        environment: 
            - "MYSQL_ROOT_PASSWORD=root_001"
            - "MYSQL_USER=myuser_001"
            - "MYSQL_PASSWORD=11223344"
        volumes: 
            - "./docker-data/mysql:/var/lib/mysql"
    phpmyadmin:
        image: "phpmyadmin/phpmyadmin:5.1.1"
        container_name: "phpmyadmin"
        depends_on: 
            - "mysql"
        ports:
            - "8080:80"
        environment: 
            - "PMA_HOST=mysql"